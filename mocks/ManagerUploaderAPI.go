// Code generated by mockery v2.10.4. DO NOT EDIT.

package mocks

import (
	context "context"

	manager "github.com/aws/aws-sdk-go-v2/feature/s3/manager"
	mock "github.com/stretchr/testify/mock"

	s3 "github.com/aws/aws-sdk-go-v2/service/s3"
)

// ManagerUploaderAPI is an autogenerated mock type for the ManagerUploaderAPI type
type ManagerUploaderAPI struct {
	mock.Mock
}

// Upload provides a mock function with given fields: ctx, input, opts
func (_m *ManagerUploaderAPI) Upload(ctx context.Context, input *s3.PutObjectInput, opts ...func(*manager.Uploader)) (*manager.UploadOutput, error) {
	_va := make([]interface{}, len(opts))
	for _i := range opts {
		_va[_i] = opts[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, input)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *manager.UploadOutput
	if rf, ok := ret.Get(0).(func(context.Context, *s3.PutObjectInput, ...func(*manager.Uploader)) *manager.UploadOutput); ok {
		r0 = rf(ctx, input, opts...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*manager.UploadOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *s3.PutObjectInput, ...func(*manager.Uploader)) error); ok {
		r1 = rf(ctx, input, opts...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
