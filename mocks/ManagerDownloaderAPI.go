// Code generated by mockery v2.10.4. DO NOT EDIT.

package mocks

import (
	context "context"
	io "io"

	manager "github.com/aws/aws-sdk-go-v2/feature/s3/manager"
	mock "github.com/stretchr/testify/mock"

	s3 "github.com/aws/aws-sdk-go-v2/service/s3"
)

// ManagerDownloaderAPI is an autogenerated mock type for the ManagerDownloaderAPI type
type ManagerDownloaderAPI struct {
	mock.Mock
}

// Download provides a mock function with given fields: ctx, w, input, options
func (_m *ManagerDownloaderAPI) Download(ctx context.Context, w io.WriterAt, input *s3.GetObjectInput, options ...func(*manager.Downloader)) (int64, error) {
	_va := make([]interface{}, len(options))
	for _i := range options {
		_va[_i] = options[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, w, input)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 int64
	if rf, ok := ret.Get(0).(func(context.Context, io.WriterAt, *s3.GetObjectInput, ...func(*manager.Downloader)) int64); ok {
		r0 = rf(ctx, w, input, options...)
	} else {
		r0 = ret.Get(0).(int64)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, io.WriterAt, *s3.GetObjectInput, ...func(*manager.Downloader)) error); ok {
		r1 = rf(ctx, w, input, options...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
